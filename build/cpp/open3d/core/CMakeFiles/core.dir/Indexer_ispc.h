//
// /home/runner/work/Open3D/Open3D/build/cpp/open3d/core/CMakeFiles/core.dir//Indexer_ispc.h
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#pragma once
#include <stdint.h>



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus

#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif

#ifndef __ISPC_STRUCT_TensorRef__
#define __ISPC_STRUCT_TensorRef__
struct TensorRef {
    void * data_ptr_;
    int64_t ndims_;
    int64_t dtype_byte_size_;
    int64_t shape_[10];
    int64_t byte_strides_[10];
};
#endif

#ifndef __ISPC_STRUCT_Indexer__
#define __ISPC_STRUCT_Indexer__
struct Indexer {
    int64_t num_inputs_;
    int64_t num_outputs_;
    struct TensorRef inputs_[10];
    struct TensorRef outputs_[2];
    bool inputs_contiguous_[10];
    bool outputs_contiguous_[2];
    int64_t master_shape_[10];
    int64_t master_strides_[10];
    int64_t ndims_;
};
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
    extern void DummyToEnsureExported_Indexer_(struct Indexer * __anon_parameter_0);
    extern void DummyToEnsureExported_TensorRef_(struct TensorRef * __anon_parameter_0);
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus
